name: CI Workflow
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  mypy:
    runs-on: ubuntu-latest
    env:
      WORKDIR: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          cd ${{env.WORKDIR}}
          python -m pip install --upgrade pip
          pip install mypy
      - name: Run mypy
        run: |
          cd ${{env.WORKDIR}}
          mypy --ignore-missing-imports .
  test:
    needs: [mypy]
    runs-on: ubuntu-latest
    outputs:
      coverage-file-cache-path: ${{ steps.output-coverage-file.outputs.COVERAGE_FILE_CACHE_PATH }}
      coverage-file-cache-key: ${{ steps.output-coverage-file.outputs.COVERAGE_FILE_CACHE_KEY }}
    env:
      WATCH_FILE_PATTERNS: |
        backend/**/*.py
        backend/requirements-dev.txt
      COVERAGE_FILE: .coverage
      WORKDIR: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{env.WORKDIR}}/${{env.COVERAGE_FILE}}
          key: ${{ runner.os }}-coverage-${{ hashFiles(env.WATCH_FILE_PATTERNS) }}
          restore-keys: |
            ${{ runner.os }}-coverage-producer-
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: ${{env.WORKDIR}}/requirements-dev.txt
      - name: Install dependencies
        run: |
          cd ${{env.WORKDIR}}
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests
        run: |
          cd ${{env.WORKDIR}}
          pytest --cov --cov-report=xml
      - name: Output coverage file
        id: output-coverage-file
        run: |
          echo "COVERAGE_FILE_CACHE_PATH=${{env.WORKDIR}}/${{env.COVERAGE_FILE}}" >> $GITHUB_OUTPUT
          echo "COVERAGE_FILE_CACHE_KEY=${{ runner.os }}-coverage-${{ hashFiles(env.WATCH_FILE_PATTERNS) }}" >> $GITHUB_OUTPUT
  coverage:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pages: write
    env:
      WORKDIR: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Retrieve coverage file
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ needs.test.outputs.coverage-file-cache-path }}
          key: ${{ needs.test.outputs.coverage-file-cache-key }}
          restore-keys: |
            ${{ runner.os }}-coverage-producer-
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' # python 3.12 is not supported by coverage-badge-py
      - name: Install dependencies
        run: pip install coverage
      - name: Generate coverage report
        run: |
          cd ${{env.WORKDIR}}
          coverage report --omit="*/tests/*" -m
          coverage html --omit="*/tests/*"
      - name: upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{env.WORKDIR}}/htmlcov
      - name: deploy to Github Pages
        uses: actions/deploy-pages@v2
        id: deployment
      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v2
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v17
        id: verify-changed-files
        with:
          files: ${{env.WORKDIR}}/coverage.svg
      - name: Commit files
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ${{env.WORKDIR}}/coverage.svg
          git commit -m "Updated coverage.svg"
      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
